/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.java.stagebus.view;

import java.awt.Cursor;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.swing.ImageIcon;
import javax.swing.JCheckBox;

import com.java.stagebus.controller.CarroController;
import com.java.stagebus.controller.FuncionarioController;
import com.java.stagebus.controller.HorarioController;
import com.java.stagebus.controller.RelatorioController;
import com.java.stagebus.enums.CarroEnum;
import com.java.stagebus.enums.DiaEnum;
import com.java.stagebus.enums.FuncionarioEnum;
import com.java.stagebus.enums.GaragemEnum;
import com.java.stagebus.enums.HorarioEnum;
import com.java.stagebus.enums.LinhaEnum;
import com.java.stagebus.enums.StatusEnum;
import com.java.stagebus.enums.TipoCarroEnum;
import com.java.stagebus.enums.TipoFuncionarioEnum;
import com.java.stagebus.enums.UsuarioEnum;
import com.java.stagebus.model.CarroModel;
import com.java.stagebus.model.FuncionarioModel;
import com.java.stagebus.model.GaragemModel;
import com.java.stagebus.model.HorarioModel;
import com.java.stagebus.model.LinhaModel;
import com.java.stagebus.model.TipoCarroModel;
import com.java.stagebus.model.UsuarioModel;

/**
 *
 * @author User
 */
public class Tela_Relatorios extends javax.swing.JFrame {
	private List<JCheckBox> listChecks;
	private RelatorioController reportController = new RelatorioController();

	/**
	 * Creates new form Tela_1
	 */
	public Tela_Relatorios() {
		initComponents();
		getContentPane().setBackground(java.awt.Color.WHITE);

		setExtendedState(MAXIMIZED_BOTH);

		ImageIcon icon = new ImageIcon("src/main/resources/Images/titulo_relatorios.png");
		Image image = icon.getImage().getScaledInstance(jLabelTitulo.getWidth(), jLabelTitulo.getHeight(),
				Image.SCALE_SMOOTH);
		jLabelTitulo.setIcon(new ImageIcon(image));

		icon = new ImageIcon("src/main/resources/Images/btn_home.png");
		image = icon.getImage().getScaledInstance(jButtonHome.getWidth(), jButtonHome.getHeight(), Image.SCALE_SMOOTH);
		jButtonHome.setIcon(new ImageIcon(image));

		// Dados da tabela

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabelTitulo = new javax.swing.JLabel();
		jButtonHome = new javax.swing.JButton();
		jComboBoxTipo = new javax.swing.JComboBox<>();
		jComboBoxTipo2 = new javax.swing.JComboBox<>();
		jLabelFiltrarPor = new javax.swing.JLabel();
		jComboBoxTipo3 = new javax.swing.JComboBox<>();
		jButtonGerarRelatorio = new javax.swing.JButton();
		jLabelColunas = new javax.swing.JLabel();
		jCheckBoxColuna0 = new javax.swing.JCheckBox();
		jCheckBoxColuna1 = new javax.swing.JCheckBox();
		jCheckBoxColuna2 = new javax.swing.JCheckBox();
		jCheckBoxColuna3 = new javax.swing.JCheckBox();
		jCheckBoxColuna4 = new javax.swing.JCheckBox();
		jCheckBoxColuna5 = new javax.swing.JCheckBox();
		jCheckBoxColuna6 = new javax.swing.JCheckBox();
		jCheckBoxColuna7 = new javax.swing.JCheckBox();
		jCheckBoxPDF = new javax.swing.JCheckBox();
		jLabelTipo = new javax.swing.JLabel();
		jCheckBoxExcel = new javax.swing.JCheckBox();
		jCheckBoxColuna8 = new javax.swing.JCheckBox();
		jCheckBoxColuna9 = new javax.swing.JCheckBox();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setBackground(new java.awt.Color(255, 255, 255));

		jLabelTitulo.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

		listChecks = Arrays.asList(jCheckBoxColuna0, jCheckBoxColuna1, jCheckBoxColuna2, jCheckBoxColuna3,
				jCheckBoxColuna4, jCheckBoxColuna5, jCheckBoxColuna6, jCheckBoxColuna7, jCheckBoxColuna8,
				jCheckBoxColuna9);

		for (JCheckBox cb : listChecks) {
			cb.setVisible(false);
		}

		jButtonHome.setBorder(null);
		jButtonHome.setCursor(new Cursor(HAND_CURSOR));
		jButtonHome.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jButtonHomeMouseClicked(evt);
			}
		});

		jComboBoxTipo.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
		jComboBoxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Carro", "Funcionário",
				"Garagem", "Horário", "Linha", "Usuário", "Tipos de carro" }));
		jComboBoxTipo.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent e) {
				if (e.getStateChange() == ItemEvent.SELECTED) {
					for (JCheckBox cb : listChecks) {
						cb.setSelected(false);
					}
					switch (jComboBoxTipo.getSelectedIndex()) {
					case 0:
						jComboBoxTipo2.setEnabled(false);
						jComboBoxTipo3.setVisible(false);
						jComboBoxTipo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
						for (JCheckBox cb : listChecks) {
							cb.setVisible(false);
						}
						break;

					case 1:
						for (JCheckBox cb : listChecks) {
							cb.setVisible(false);
						}
						jComboBoxTipo2.setModel(new javax.swing.DefaultComboBoxModel<>(
								new String[] { "Todos os carros", "Por status", "Por garagem", "Por tipo" }));
						jComboBoxTipo2.setEnabled(true);
						jComboBoxTipo3.setVisible(false);
						List<String> optionsView = Arrays.asList("Número", "Nome", "Placa", "Tipo", "Status",
								"Garagem");
						List<String> optionsColumns = Arrays.asList(CarroEnum.ID.getNome(), CarroEnum.NOME.getNome(),
								CarroEnum.PLACA.getNome(),
								TipoCarroEnum.TABELA.getNome() + "." + TipoCarroEnum.NOME.getNome(),
								StatusEnum.TABELA.getNome() + "." + StatusEnum.DESCRICAO.getNome(),
								GaragemEnum.TABELA.getNome() + "." + GaragemEnum.NOME.getNome());
						if (jComboBoxTipo2.getSelectedIndex() == 1) {
							optionsView.add("Quantidade de vínculos");
							optionsColumns.add("COUNT (" + CarroEnum.ID.getNome() + ")");
						}

						for (int i = 0; i < optionsView.size(); i++) {
							JCheckBox j = listChecks.get(i);
							j.setVisible(true);
							j.setText(optionsView.get(i));
							j.setName(optionsColumns.get(i));

						}

						break;
					case 2:
						for (JCheckBox cb : listChecks) {
							cb.setVisible(false);
						}
						jComboBoxTipo2.setModel(new javax.swing.DefaultComboBoxModel<>(
								new String[] { "Todos os funcionários", "Por tipo" }));
						jComboBoxTipo2.setEnabled(true);
						jComboBoxTipo3.setVisible(false);
						optionsView = Arrays.asList("ID", "Nome", "Apelido", "Tipo", "Matrícula");
						optionsColumns = Arrays.asList(FuncionarioEnum.ID.getNome(), FuncionarioEnum.NOME.getNome(),
								FuncionarioEnum.APELIDO.getNome(),
								TipoFuncionarioEnum.TABELA.getNome() + "." + TipoFuncionarioEnum.DESCRICAO.getNome(),
								FuncionarioEnum.MATRICULA.getNome());

						for (int i = 0; i < optionsView.size(); i++) {
							JCheckBox j = listChecks.get(i);
							j.setVisible(true);
							j.setText(optionsView.get(i));
							j.setName(optionsColumns.get(i));

						}

						break;

					case 3:
						for (JCheckBox cb : listChecks) {
							cb.setVisible(false);
						}
						jComboBoxTipo2
								.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos as garagens" }));
						jComboBoxTipo2.setEnabled(true);
						jComboBoxTipo3.setVisible(false);

						optionsView = Arrays.asList("ID", "Nome", "Largura", "Comprimento", "Altura", "Responsável",
								"Local", "Quantidade máxima", "Ônibus vinculados");
						optionsColumns = Arrays.asList(GaragemEnum.ID.getNome(), GaragemEnum.NOME.getNome(),
								GaragemEnum.LARGURA.getNome(), GaragemEnum.COMPRIMENTO.getNome(),
								GaragemEnum.ALTURA.getNome(), GaragemEnum.RESPONSAVEL.getNome(),
								GaragemEnum.LOCAL.getNome(), GaragemEnum.MAXIMO.getNome(),
								"COUNT (" + CarroEnum.TABELA.getNome() + "." + CarroEnum.GARAGEM.getNome() + ")");

						for (int i = 0; i < optionsView.size(); i++) {
							JCheckBox j = listChecks.get(i);
							j.setVisible(true);
							j.setText(optionsView.get(i));
							j.setName(optionsColumns.get(i));

						}

						break;

					case 4:
						for (JCheckBox cb : listChecks) {
							cb.setVisible(false);
						}
						jComboBoxTipo2.setModel(new javax.swing.DefaultComboBoxModel<>(
								new String[] { "Todos os horarios", "Horários do dia", "Horarios da garagem",
										"Horarios do carro", "Horários da linha", "Horarios do funcionário" }));
						jComboBoxTipo2.setEnabled(true);

						changeState();

						optionsView = Arrays.asList("Dia", "Hora", "Número da linha", "Descrição da Linha", "Carro",
								"Motorista", "Cobrador", "Garagem");
						optionsColumns = Arrays.asList(DiaEnum.TABELA.getNome() + "." + DiaEnum.DESCRICAO.getNome(),
								HorarioEnum.HORA.getNome(), "num." + LinhaEnum.NUMERO.getNome(),
								"nome." + LinhaEnum.NOME.getNome(), HorarioEnum.CARRO.getNome(),
								"mot." + FuncionarioEnum.APELIDO.getNome() + " as nome_motorista",
								"cob." + FuncionarioEnum.APELIDO.getNome() + " as nome_cobrador",
								GaragemEnum.TABELA.getNome() + "." + GaragemEnum.NOME.getNome());

						for (int i = 0; i < optionsView.size(); i++) {
							JCheckBox j = listChecks.get(i);
							j.setVisible(true);
							j.setText(optionsView.get(i));
							j.setName(optionsColumns.get(i));

						}

						break;

					case 5:
						for (JCheckBox cb : listChecks) {
							cb.setVisible(false);
						}
						jComboBoxTipo2
								.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas as linhas" }));
						jComboBoxTipo2.setEnabled(true);
						jComboBoxTipo3.setVisible(false);

						optionsView = Arrays.asList("ID", "Número", "Nome", "Ida", "Volta");
						optionsColumns = Arrays.asList(LinhaEnum.ID.getNome(), LinhaEnum.NUMERO.getNome(),
								LinhaEnum.NOME.getNome(), LinhaEnum.IDA.getNome(), LinhaEnum.VOLTA.getNome());

						for (int i = 0; i < optionsView.size(); i++) {
							JCheckBox j = listChecks.get(i);
							j.setVisible(true);
							j.setText(optionsView.get(i));
							j.setName(optionsColumns.get(i));

						}

						break;

					case 6:
						for (JCheckBox cb : listChecks) {
							cb.setVisible(false);
						}
						jComboBoxTipo2
								.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos os usuários" }));
						jComboBoxTipo2.setEnabled(true);
						jComboBoxTipo3.setVisible(false);
						String permissions = UsuarioEnum.CADASTRAR_USUARIO.getNome() + " , "
								+ UsuarioEnum.CADASTRAR_CARRO.getNome() + " , "
								+ UsuarioEnum.CADASTRAR_GARAGEM.getNome() + " , "
								+ UsuarioEnum.CADASTRAR_LINHA.getNome() + " , "
								+ UsuarioEnum.CADASTRAR_TIPO_CARRO.getNome() + " , "
								+ UsuarioEnum.CADASTRAR_FUNCIONARIO.getNome() + " , "
								+ UsuarioEnum.EDITAR_USUARIO.getNome() + " , " + UsuarioEnum.EDITAR_CARRO.getNome()
								+ " , " + UsuarioEnum.EDITAR_GARAGEM.getNome() + " , "
								+ UsuarioEnum.EDITAR_LINHA.getNome() + " , " + UsuarioEnum.EDITAR_TIPO_CARRO.getNome()
								+ " , " + UsuarioEnum.EDITAR_FUNCIONARIO.getNome() + " , "
								+ UsuarioEnum.EMITIR_RELATORIO.getNome() + " , "
								+ UsuarioEnum.CADASTRAR_EDITAR_HORARIO.getNome() + " , "
								+ UsuarioEnum.DAR_PERMISSAO_USUARIO.getNome() + " , "
								+ UsuarioEnum.EXCLUIR_USUARIO.getNome() + " , "
								+ UsuarioEnum.ATIVAR_DESATIVAR_USUARIO.getNome();

						optionsView = Arrays.asList("ID", "Login", "Nome", "Sobrenome", "Permissões", "Status");
						optionsColumns = Arrays.asList(UsuarioEnum.ID.getNome(), UsuarioEnum.LOGIN.getNome(),
								UsuarioEnum.NOME.getNome(), UsuarioEnum.SOBRENOME.getNome(), permissions,
								UsuarioEnum.STATUS.getNome());

						for (int i = 0; i < optionsView.size(); i++) {
							JCheckBox j = listChecks.get(i);
							j.setVisible(true);
							j.setText(optionsView.get(i));
							j.setName(optionsColumns.get(i));

						}

						break;

					case 7:
						for (JCheckBox cb : listChecks) {
							cb.setVisible(false);
						}
						jComboBoxTipo2
								.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos os tipos" }));
						jComboBoxTipo2.setEnabled(true);
						jComboBoxTipo3.setVisible(false);

						optionsView = Arrays.asList("ID", "Nome", "Largura", "Comprimento", "Altura", "Peso");
						optionsColumns = Arrays.asList(TipoCarroEnum.ID.getNome(), TipoCarroEnum.NOME.getNome(),
								TipoCarroEnum.LARGURA.getNome(), TipoCarroEnum.COMPRIMENTO.getNome(),
								TipoCarroEnum.ALTURA.getNome(), TipoCarroEnum.PESO.getNome());

						for (int i = 0; i < optionsView.size(); i++) {
							JCheckBox j = listChecks.get(i);
							j.setVisible(true);
							j.setText(optionsView.get(i));
							j.setName(optionsColumns.get(i));

						}

						break;

					default:
						break;
					}
				}
			}
		});

		jComboBoxTipo2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
		jComboBoxTipo2.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent e) {
				if (e.getStateChange() == ItemEvent.SELECTED) {
					switch (jComboBoxTipo.getSelectedIndex()) {

					case 3, 5, 6, 7:
						jComboBoxTipo3.setVisible(false);

						break;

					case 1:

						if (jComboBoxTipo2.getSelectedIndex() == 1) {
							jComboBoxTipo3.setVisible(true);
							CarroController carController = new CarroController();
							String[] aux = carController.generateObjectList(carController.listOfStatus());
							String[] list = new String[aux.length];

							for (int i = 0; i < list.length; i++)
								list[i] = aux[i];

							jComboBoxTipo3.setModel(new javax.swing.DefaultComboBoxModel<>(list));

						} else if (jComboBoxTipo2.getSelectedIndex() == 2) {
							jComboBoxTipo3.setVisible(true);
							CarroController carController = new CarroController();
							String[] aux = carController.generateObjectList(carController.listOfGarage());
							String[] list = new String[aux.length];

							for (int i = 0; i < list.length; i++)
								list[i] = aux[i];

							jComboBoxTipo3.setModel(new javax.swing.DefaultComboBoxModel<>(list));

						} else if (jComboBoxTipo2.getSelectedIndex() == 3) {
							jComboBoxTipo3.setVisible(true);
							CarroController carController = new CarroController();
							String[] aux = carController.generateObjectList(carController.listOfType());
							String[] list = new String[aux.length];

							for (int i = 0; i < list.length; i++)
								list[i] = aux[i];

							jComboBoxTipo3.setModel(new javax.swing.DefaultComboBoxModel<>(list));

						}

						break;

					case 2:
						if (jComboBoxTipo2.getSelectedIndex() == 1) {
							jComboBoxTipo3.setVisible(true);
							FuncionarioController employeeController = new FuncionarioController();
							String[] aux = employeeController
									.generateListOfTypeEmployee(employeeController.listOfTypeEmployee());
							String[] list = new String[aux.length];

							for (int i = 0; i < list.length; i++)
								list[i] = aux[i];

							jComboBoxTipo3.setModel(new javax.swing.DefaultComboBoxModel<>(list));

						}
						break;

					case 4:

						changeState();

						break;

					default:
						break;
					}
				}
			}
		});
		jComboBoxTipo2.setEnabled(false);

		jLabelFiltrarPor.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
		jLabelFiltrarPor.setForeground(new java.awt.Color(127, 127, 127));
		jLabelFiltrarPor.setText("Relatório de:");

		jComboBoxTipo3.setFont(new java.awt.Font("Calibri", 1, 18));
		jComboBoxTipo3.setVisible(false);// NOI18N
		jComboBoxTipo3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N

		jButtonGerarRelatorio.setFont(new java.awt.Font("Candara", 1, 24)); // NOI18N
		jButtonGerarRelatorio.setForeground(new java.awt.Color(127, 127, 127));
		jButtonGerarRelatorio.setText("Gerar relatório");
		jButtonGerarRelatorio.setBorder(null);
		jButtonGerarRelatorio.setBorderPainted(false);
		jButtonGerarRelatorio.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jButtonGerarRelatorioMouseClicked(evt);
			}
		});

		jLabelColunas.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
		jLabelColunas.setForeground(new java.awt.Color(127, 127, 127));
		jLabelColunas.setText("Colunas:");

		jCheckBoxColuna0.setBackground(new java.awt.Color(255, 255, 255));
		jCheckBoxColuna0.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
		jCheckBoxColuna0.setForeground(new java.awt.Color(127, 127, 127));
		jCheckBoxColuna0.setText("C1");

		jCheckBoxColuna1.setBackground(new java.awt.Color(255, 255, 255));
		jCheckBoxColuna1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
		jCheckBoxColuna1.setForeground(new java.awt.Color(127, 127, 127));
		jCheckBoxColuna1.setText("C2");

		jCheckBoxColuna2.setBackground(new java.awt.Color(255, 255, 255));
		jCheckBoxColuna2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
		jCheckBoxColuna2.setForeground(new java.awt.Color(127, 127, 127));
		jCheckBoxColuna2.setText("C3");

		jCheckBoxColuna3.setBackground(new java.awt.Color(255, 255, 255));
		jCheckBoxColuna3.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
		jCheckBoxColuna3.setForeground(new java.awt.Color(127, 127, 127));
		jCheckBoxColuna3.setText("C4");

		jCheckBoxColuna4.setBackground(new java.awt.Color(255, 255, 255));
		jCheckBoxColuna4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
		jCheckBoxColuna4.setForeground(new java.awt.Color(127, 127, 127));
		jCheckBoxColuna4.setText("C5");

		jCheckBoxColuna5.setBackground(new java.awt.Color(255, 255, 255));
		jCheckBoxColuna5.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
		jCheckBoxColuna5.setForeground(new java.awt.Color(127, 127, 127));
		jCheckBoxColuna5.setText("C6");

		jCheckBoxColuna6.setBackground(new java.awt.Color(255, 255, 255));
		jCheckBoxColuna6.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
		jCheckBoxColuna6.setForeground(new java.awt.Color(127, 127, 127));
		jCheckBoxColuna6.setText("C7");

		jCheckBoxColuna7.setBackground(new java.awt.Color(255, 255, 255));
		jCheckBoxColuna7.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
		jCheckBoxColuna7.setForeground(new java.awt.Color(127, 127, 127));
		jCheckBoxColuna7.setText("C8");

		jCheckBoxPDF.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
		jCheckBoxPDF.setText("PDF");

		jLabelTipo.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
		jLabelTipo.setForeground(new java.awt.Color(127, 127, 127));
		jLabelTipo.setText("Tipos:");

		jCheckBoxExcel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
		jCheckBoxExcel.setText("Excel");

		jCheckBoxColuna8.setBackground(new java.awt.Color(255, 255, 255));
		jCheckBoxColuna8.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
		jCheckBoxColuna8.setForeground(new java.awt.Color(127, 127, 127));
		jCheckBoxColuna8.setText("C9");

		jCheckBoxColuna9.setBackground(new java.awt.Color(255, 255, 255));
		jCheckBoxColuna9.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
		jCheckBoxColuna9.setForeground(new java.awt.Color(127, 127, 127));
		jCheckBoxColuna9.setText("C10");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(100, 100, 100)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addGroup(layout.createSequentialGroup()
												.addComponent(jCheckBoxPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(50, 50, 50).addComponent(jCheckBoxExcel,
														javax.swing.GroupLayout.PREFERRED_SIZE, 150,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addComponent(jLabelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 350,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(0, 0, Short.MAX_VALUE))
						.addGroup(layout.createSequentialGroup().addGroup(layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup().addGroup(layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addComponent(jComboBoxTipo3, javax.swing.GroupLayout.Alignment.LEADING, 0,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jComboBoxTipo, javax.swing.GroupLayout.Alignment.LEADING, 0,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jLabelFiltrarPor, javax.swing.GroupLayout.Alignment.LEADING,
												javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
										.addComponent(jComboBoxTipo2, javax.swing.GroupLayout.Alignment.LEADING, 0,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
										.addGap(100, 100, 100)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jLabelColunas, javax.swing.GroupLayout.Alignment.LEADING,
														javax.swing.GroupLayout.PREFERRED_SIZE, 350,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(javax.swing.GroupLayout.Alignment.LEADING,
														layout.createSequentialGroup().addComponent(
																jCheckBoxColuna0, javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																.addGap(10, 10, 10)
																.addComponent(jCheckBoxColuna1,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addGap(10, 10, 10).addComponent(jCheckBoxColuna2,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE))
												.addGroup(javax.swing.GroupLayout.Alignment.LEADING,
														layout.createSequentialGroup().addComponent(
																jCheckBoxColuna3, javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																.addGap(10, 10, 10).addComponent(jCheckBoxColuna4,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addGap(10, 10, 10).addComponent(jCheckBoxColuna5,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE))
												.addGroup(layout.createSequentialGroup().addGroup(layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(jCheckBoxColuna9,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
														.addComponent(jCheckBoxColuna6,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
														.addGap(10, 10, 10)
														.addComponent(jCheckBoxColuna7,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
														.addGap(10, 10, 10).addComponent(jCheckBoxColuna8,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE))))
								.addGroup(layout.createSequentialGroup()
										.addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 310,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(jButtonHome, javax.swing.GroupLayout.PREFERRED_SIZE, 50,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(2, 2, 2)))
								.addGap(98, 98, 98))))
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jButtonGerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 231,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(100, 100, 100)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jLabelTitulo, javax.swing.GroupLayout.Alignment.TRAILING,
								javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jButtonHome, javax.swing.GroupLayout.Alignment.TRAILING,
								javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addGap(85, 85, 85)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(jLabelFiltrarPor, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabelColunas, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
								javax.swing.GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(jComboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jCheckBoxColuna0, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jCheckBoxColuna1, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jCheckBoxColuna2, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE))
				.addGap(20, 20, 20)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(jComboBoxTipo2, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jCheckBoxColuna3, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jCheckBoxColuna4, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jCheckBoxColuna5, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE))
				.addGap(19, 19, 19)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(jComboBoxTipo3, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jCheckBoxColuna6, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jCheckBoxColuna7, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jCheckBoxColuna8, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE))
				.addGap(20, 20, 20)
				.addComponent(jCheckBoxColuna9, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addGap(42, 42, 42)
				.addComponent(jLabelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(jCheckBoxPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jCheckBoxExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(jButtonGerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
						javax.swing.GroupLayout.PREFERRED_SIZE)
				.addGap(100, 100, 100)));

		pack();
	}// </editor-fold>

	private void jButtonGerarRelatorioMouseClicked(java.awt.event.MouseEvent evt) {

		boolean generate = false;

		for (JCheckBox j : listChecks) {
			if (j.isSelected()) {
				generate = true;
				break;
			}
		}

		if (generate) {
			List<String> header = new ArrayList<String>();
			List<String> columns = new ArrayList<String>();

			for (JCheckBox j : listChecks) {
				if (j.isSelected()) {
					header.add(j.getText());
					columns.add(j.getName());
				}
			}

			int param = jComboBoxTipo.getSelectedIndex();

			switch (param) {
			case 1:
				List<CarroModel> listCar = new ArrayList<CarroModel>();
				if (jComboBoxTipo2.getSelectedIndex() == 0)
					listCar = reportController.getCarTable(columns, 0, 0);
				else {
					String aux = jComboBoxTipo3.getSelectedItem().toString();
					aux = aux.substring(0, (aux.indexOf("-") - 1));
					listCar = reportController.getCarTable(columns, jComboBoxTipo2.getSelectedIndex(),
							Integer.parseInt(aux));

				}

				if (jCheckBoxPDF.isSelected()) {

					Tela_Relatorios_PDF.setListCar(listCar);

					Tela_Relatorios_PDF.setHeader(header);
					Tela_Relatorios_PDF.setParam(param);
					Tela_Relatorios_PDF.setColumns(columns);
					new Tela_Relatorios_PDF().main(null);

				}
				if (jCheckBoxExcel.isSelected()) {
					if (jComboBoxTipo2.getSelectedIndex() == 0)
						Tela_Relatorios_Excel.setListCar(reportController.getCarTable(columns, 0, 0));
					else {
						String aux = jComboBoxTipo3.getSelectedItem().toString();
						aux = aux.substring(0, (aux.indexOf("-") - 1));
						Tela_Relatorios_Excel
								.setListCar(reportController.getCarTable(columns, 1, Integer.parseInt(aux)));

					}

					Tela_Relatorios_Excel.setHeader(header);
					Tela_Relatorios_Excel.setParam(param);
					Tela_Relatorios_Excel.setColumns(columns);
					new Tela_Relatorios_Excel().main(null);

				}
				break;

			case 2:
				List<FuncionarioModel> listEmployee = new ArrayList<FuncionarioModel>();
				if (jComboBoxTipo2.getSelectedIndex() == 0)
					listEmployee = reportController.getEmployeeTable(columns, 0, 0);
				else {
					String aux = jComboBoxTipo3.getSelectedItem().toString();
					aux = aux.substring(0, (aux.indexOf("-") - 1));
					listEmployee = reportController.getEmployeeTable(columns, 1, Integer.parseInt(aux));
				}

				if (jCheckBoxPDF.isSelected()) {

					Tela_Relatorios_PDF.setListEmployee(listEmployee);
					Tela_Relatorios_PDF.setHeader(header);
					Tela_Relatorios_PDF.setParam(param);
					Tela_Relatorios_PDF.setColumns(columns);
					new Tela_Relatorios_PDF().main(null);

				}
				if (jCheckBoxExcel.isSelected()) {

					Tela_Relatorios_Excel.setListEmployee(listEmployee);

					Tela_Relatorios_Excel.setHeader(header);
					Tela_Relatorios_Excel.setParam(param);
					Tela_Relatorios_Excel.setColumns(columns);
					new Tela_Relatorios_Excel().main(null);

				}
				break;

			case 3:
				List<GaragemModel> listGarage = new ArrayList<GaragemModel>();

				listGarage = reportController.getGarageTable(columns);

				if (jCheckBoxPDF.isSelected()) {

					Tela_Relatorios_PDF.setListGarage(listGarage);
					Tela_Relatorios_PDF.setHeader(header);
					Tela_Relatorios_PDF.setParam(param);
					Tela_Relatorios_PDF.setColumns(columns);
					new Tela_Relatorios_PDF().main(null);

				}
				if (jCheckBoxExcel.isSelected()) {

					Tela_Relatorios_Excel.setListGarage(listGarage);
					Tela_Relatorios_Excel.setHeader(header);
					Tela_Relatorios_Excel.setParam(param);
					Tela_Relatorios_Excel.setColumns(columns);
					new Tela_Relatorios_Excel().main(null);

				}
				break;

			case 4:
				List<HorarioModel> listSchedule = new ArrayList<HorarioModel>();
				if (jComboBoxTipo2.getSelectedIndex() == 0)
					listSchedule = reportController.getScheduleTable(columns, 0, 0);
				else {
					String aux = jComboBoxTipo3.getSelectedItem().toString();
					aux = aux.substring(0, (aux.indexOf("-") - 1));
					listSchedule = reportController.getScheduleTable(columns, jComboBoxTipo2.getSelectedIndex(),
							Integer.parseInt(aux));
				}

				if (jCheckBoxPDF.isSelected()) {

					Tela_Relatorios_PDF.setListSchedule(listSchedule);
					Tela_Relatorios_PDF.setHeader(header);
					Tela_Relatorios_PDF.setParam(param);
					Tela_Relatorios_PDF.setColumns(columns);
					new Tela_Relatorios_PDF().main(null);

				}
				if (jCheckBoxExcel.isSelected()) {

					Tela_Relatorios_Excel.setListSchedule(listSchedule);

					Tela_Relatorios_Excel.setHeader(header);
					Tela_Relatorios_Excel.setParam(param);
					Tela_Relatorios_Excel.setColumns(columns);
					new Tela_Relatorios_Excel().main(null);

				}
				break;

			case 5:
				List<LinhaModel> listLine = new ArrayList<LinhaModel>();

				listLine = reportController.getLineTable(columns);

				if (jCheckBoxPDF.isSelected()) {

					Tela_Relatorios_PDF.setListLine(listLine);
					Tela_Relatorios_PDF.setHeader(header);
					Tela_Relatorios_PDF.setParam(param);
					Tela_Relatorios_PDF.setColumns(columns);
					new Tela_Relatorios_PDF().main(null);

				}
				if (jCheckBoxExcel.isSelected()) {

					Tela_Relatorios_Excel.setListLine(listLine);
					Tela_Relatorios_Excel.setHeader(header);
					Tela_Relatorios_Excel.setParam(param);
					Tela_Relatorios_Excel.setColumns(columns);
					new Tela_Relatorios_Excel().main(null);

				}
				break;
				
			case 6:
				List<UsuarioModel> listUser = new ArrayList<UsuarioModel>();

				listUser = reportController.getUserTable(columns);

				if (jCheckBoxPDF.isSelected()) {

					Tela_Relatorios_PDF.setListUser(listUser);
					Tela_Relatorios_PDF.setHeader(header);
					Tela_Relatorios_PDF.setParam(param);
					Tela_Relatorios_PDF.setColumns(columns);
					new Tela_Relatorios_PDF().main(null);

				}
				if (jCheckBoxExcel.isSelected()) {

					Tela_Relatorios_Excel.setListUser(listUser);
					Tela_Relatorios_Excel.setHeader(header);
					Tela_Relatorios_Excel.setParam(param);
					Tela_Relatorios_Excel.setColumns(columns);
					new Tela_Relatorios_Excel().main(null);

				}
				break;
				
			case 7:
				List<TipoCarroModel> listCarType = new ArrayList<TipoCarroModel>();

				listCarType = reportController.getCarTypeTable(columns);

				if (jCheckBoxPDF.isSelected()) {

					Tela_Relatorios_PDF.setListCarType(listCarType);
					Tela_Relatorios_PDF.setHeader(header);
					Tela_Relatorios_PDF.setParam(param);
					Tela_Relatorios_PDF.setColumns(columns);
					new Tela_Relatorios_PDF().main(null);

				}
				if (jCheckBoxExcel.isSelected()) {

					Tela_Relatorios_Excel.setListCarType(listCarType);
					Tela_Relatorios_Excel.setHeader(header);
					Tela_Relatorios_Excel.setParam(param);
					Tela_Relatorios_Excel.setColumns(columns);
					new Tela_Relatorios_Excel().main(null);

				}
				break;

			default:
				break;
				
				
			}
		}

	}

	private void jButtonHomeMouseClicked(java.awt.event.MouseEvent evt) {
		new Tela_Inicial().setVisible(true);
		setVisible(false);
	}

	private void changeState() {
		jComboBoxTipo3.setVisible(true);
		HorarioController scheduleController = new HorarioController();
		List<String> listSelection = new ArrayList<String>();

		switch (jComboBoxTipo2.getSelectedIndex()) {
		case 0:
			jComboBoxTipo3.setVisible(false);

			break;
		case 1:
			listSelection = scheduleController.listOfDay();

			break;

		case 2:
			listSelection = scheduleController.listOfGarage();

			break;

		case 3:
			listSelection = scheduleController.listOfCar();

			break;

		case 4:
			listSelection = scheduleController.listOfLine();

			break;

		case 5:
			listSelection = scheduleController.listOfEmployee();

			break;
		default:
			break;
		}
		if (jComboBoxTipo2.getSelectedIndex() != 0) {
			String[] aux = scheduleController.generateObjectList(listSelection);
			String[] list = new String[aux.length];

			for (int i = 0; i < list.length; i++)
				list[i] = aux[i];

			jComboBoxTipo3.setModel(new javax.swing.DefaultComboBoxModel<>(list));
		}
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Tela_Relatorios.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Tela_Relatorios.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Tela_Relatorios.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Tela_Relatorios.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		}
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Tela_Relatorios().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JButton jButtonGerarRelatorio;
	private javax.swing.JButton jButtonHome;
	private javax.swing.JCheckBox jCheckBoxColuna0;
	private javax.swing.JCheckBox jCheckBoxColuna1;
	private javax.swing.JCheckBox jCheckBoxColuna2;
	private javax.swing.JCheckBox jCheckBoxColuna3;
	private javax.swing.JCheckBox jCheckBoxColuna4;
	private javax.swing.JCheckBox jCheckBoxColuna5;
	private javax.swing.JCheckBox jCheckBoxColuna6;
	private javax.swing.JCheckBox jCheckBoxColuna7;
	private javax.swing.JCheckBox jCheckBoxColuna8;
	private javax.swing.JCheckBox jCheckBoxColuna9;
	private javax.swing.JCheckBox jCheckBoxExcel;
	private javax.swing.JCheckBox jCheckBoxPDF;
	private javax.swing.JComboBox<String> jComboBoxTipo;
	private javax.swing.JComboBox<String> jComboBoxTipo2;
	private javax.swing.JComboBox<String> jComboBoxTipo3;
	private javax.swing.JLabel jLabelColunas;
	private javax.swing.JLabel jLabelFiltrarPor;
	private javax.swing.JLabel jLabelTipo;
	private javax.swing.JLabel jLabelTitulo;
	// End of variables declaration
}
