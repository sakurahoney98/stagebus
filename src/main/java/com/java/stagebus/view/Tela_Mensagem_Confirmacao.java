/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.java.stagebus.view;

import com.java.stagebus.controller.CarroController;
import com.java.stagebus.controller.FuncionarioController;
import com.java.stagebus.controller.GaragemController;
import com.java.stagebus.controller.HorarioController;
import com.java.stagebus.controller.LinhaController;
import com.java.stagebus.controller.TipoCarroController;
import com.java.stagebus.controller.UsuarioController;
import com.java.stagebus.enums.HorarioEnum;
import com.java.stagebus.model.UsuarioModel;

/**
 *
 * @author User
 */
public class Tela_Mensagem_Confirmacao extends javax.swing.JFrame {

	private static String redirecionar;
	private HorarioController scheduleController = new HorarioController();
	private String objectName;

	private UsuarioModel userModel;

	public static void setRedirecionar(String s) {

		redirecionar = s;
	}

	/**
	 * Creates new form Tela_Mensagem
	 */
	public Tela_Mensagem_Confirmacao() {
		initComponents();
		getContentPane().setBackground(java.awt.Color.WHITE);

		setExtendedState(MAXIMIZED_BOTH);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		userModel = Tela_1.getDataUser();

		jLabelMensagem = new javax.swing.JLabel();
		jButtonSim = new javax.swing.JButton();
		jButtonNao = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		adapteView();

		jLabelMensagem.setBackground(new java.awt.Color(255, 255, 255));
		jLabelMensagem.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
		jLabelMensagem.setForeground(new java.awt.Color(68, 114, 196));
		jLabelMensagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabelMensagem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		jLabelMensagem.setText("Deseja mesmo excluir " + objectName + "?");

		jButtonSim.setBackground(new java.awt.Color(68, 114, 196));
		jButtonSim.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
		jButtonSim.setForeground(new java.awt.Color(255, 255, 255));
		jButtonSim.setText("Sim");
		jButtonSim.setBorder(null);
		jButtonSim.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jButtonSimMouseClicked(evt);
			}
		});

		jButtonNao.setBackground(new java.awt.Color(68, 114, 196));
		jButtonNao.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
		jButtonNao.setForeground(new java.awt.Color(255, 255, 255));
		jButtonNao.setText("Não");
		jButtonNao.setBorder(null);
		jButtonNao.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jButtonNaoMouseClicked(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap(78, Short.MAX_VALUE)
						.addComponent(jLabelMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 743,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(79, Short.MAX_VALUE))
				.addGroup(layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jButtonSim, javax.swing.GroupLayout.PREFERRED_SIZE, 250,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(40, 40, 40)
						.addComponent(jButtonNao, javax.swing.GroupLayout.PREFERRED_SIZE, 250,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap(74, Short.MAX_VALUE)
						.addComponent(jLabelMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 139,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(89, 89, 89)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jButtonNao, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButtonSim, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(116, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>

	private void adapteView() {
		switch (redirecionar) {
		case "f": {
			objectName = "o funcionário " + Tela_Funcionario_Geral.getEmployee().getId() + " - "
					+ Tela_Funcionario_Geral.getEmployee().getApelido();

			break;
		}
		case "l": {
			objectName = "a linha " + Tela_Linha_Geral.getLine().getLinha();

			break;
		}

		case "t": {
			objectName = "o tipo de carro " + Tela_TipoCarro_Geral.getCarType().getId() + " - " + Tela_TipoCarro_Geral.getCarType().getNome();
			break;
		}

		case "c": {

			objectName = "o carro " + Tela_Carro_Geral.getCar().getNumero() + " - " + Tela_Carro_Geral.getCar().getNome();

			break;
		}

		case "g": {
			objectName = "a garagem " + Tela_Garagem_Geral.getGarage().getId() + " - " + Tela_Garagem_Geral.getGarage().getNome();

			break;
		}

		case "h": {
			objectName = "o horário " + String.valueOf(Tela_Horario_Editar.getSchedule().getId());

			break;
		}

		case "u": {
			objectName = "o usuário " + Tela_Usuario_Geral.getUser().getLogin();
			break;
		}

		default:
			throw new IllegalArgumentException("Unexpected value: " + redirecionar);
		}
	}

	private void jButtonSimMouseClicked(java.awt.event.MouseEvent evt) {
		switch (redirecionar) {
		case "f": {
			FuncionarioController employeeController = new FuncionarioController();
			int bond = scheduleController.bondObjectSchedule(HorarioEnum.MOTORISTA.getNome(), Tela_Linha_Geral.getLine().getId()) + scheduleController.bondObjectSchedule(HorarioEnum.COBRADOR.getNome(), Tela_Linha_Geral.getLine().getId());
			

			if (bond == 0) {
				employeeController.delete(userModel.getId(), Tela_Funcionario_Geral.getEmployee().getId());
				Tela_Mensagem_Redirecionar.setRedirecionar("fd");
				new Tela_Mensagem_Redirecionar().setVisible(true);
			} else {
				Tela_Mensagem_Vinculos.setAmount(bond);
				Tela_Mensagem_Vinculos.setRedirecionar(redirecionar);
				new Tela_Mensagem_Vinculos().setVisible(true);

			}
			setVisible(false);
			break;
		}
		case "l": {
			LinhaController lineController = new LinhaController();
			int bond = scheduleController.bondObjectSchedule(HorarioEnum.LINHA.getNome(), Tela_Linha_Geral.getLine().getId());

			if (bond == 0) {
				lineController.delete(userModel.getId(), Tela_Funcionario_Geral.getEmployee().getId());
				Tela_Mensagem_Redirecionar.setRedirecionar("fd");
				new Tela_Mensagem_Redirecionar().setVisible(true);
			} else {
				Tela_Mensagem_Vinculos.setAmount(bond);
				Tela_Mensagem_Vinculos.setRedirecionar(redirecionar);
				new Tela_Mensagem_Vinculos().setVisible(true);

			}
			setVisible(false);
			break;
		}

		case "t": {
			TipoCarroController car_TypeController = new TipoCarroController();
			int bond = car_TypeController.amountBusCarType(Tela_TipoCarro_Geral.getCarType().getId());

			if (bond == 0) {
				car_TypeController.delete(userModel.getId(), Tela_TipoCarro_Geral.getCarType().getId());
				Tela_Mensagem_Redirecionar.setRedirecionar("td");
				new Tela_Mensagem_Redirecionar().setVisible(true);
			} else {
				Tela_Mensagem_Vinculos.setAmount(bond);
				Tela_Mensagem_Vinculos.setRedirecionar(redirecionar);
				new Tela_Mensagem_Vinculos().setVisible(true);

			}
			setVisible(false);
			break;
		}

		case "c": {
			CarroController carController = new CarroController();
			int bond = scheduleController.bondObjectSchedule(HorarioEnum.CARRO.getNome(), Tela_Linha_Geral.getLine().getId());

			if (bond == 0) {
				carController.delete(userModel.getId(), Tela_Carro_Geral.getCar().getNumero());
				Tela_Mensagem_Redirecionar.setRedirecionar("cd");
				new Tela_Mensagem_Redirecionar().setVisible(true);
			} else {
				Tela_Mensagem_Vinculos.setAmount(bond);
				Tela_Mensagem_Vinculos.setRedirecionar(redirecionar);
				new Tela_Mensagem_Vinculos().setVisible(true);

			}

			setVisible(false);
			break;
		}

		case "g": {
			GaragemController garageController = new GaragemController();
			int bond = garageController.amountBusOnGarage(Tela_Garagem_Geral.getGarage().getId());
			if (bond == 0) {
				garageController.delete(userModel.getId(), Tela_Garagem_Geral.getGarage().getId());
				Tela_Mensagem_Redirecionar.setRedirecionar("gd");
				new Tela_Mensagem_Redirecionar().setVisible(true);

			} else {
				Tela_Mensagem_Vinculos.setAmount(bond);
				Tela_Mensagem_Vinculos.setRedirecionar(redirecionar);
				new Tela_Mensagem_Vinculos().setVisible(true);

			}

			setVisible(false);
			break;
		}

		case "h": {
			scheduleController.delete(userModel.getId(), Tela_Horario_Editar.getSchedule().getId());
			Tela_Mensagem_Redirecionar.setRedirecionar("hd");
			setVisible(false);
			break;
		}

		case "u": {
			UsuarioController userController = new UsuarioController();
				
				userController.delete(userModel.getId(), Tela_Usuario_Geral.getUser().getId());
				
				Tela_Mensagem_Redirecionar.setRedirecionar("ud");
				new Tela_Mensagem_Redirecionar().setVisible(true);

			

			setVisible(false);
			break;
		}

		default:
			throw new IllegalArgumentException("Unexpected value: " + redirecionar);
		}

	}

	private void jButtonNaoMouseClicked(java.awt.event.MouseEvent evt) {
		switch (redirecionar) {
		case "f": {
			new Tela_Funcionario_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}
		case "l": {
			new Tela_Linha_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		case "t": {
			new Tela_TipoCarro_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		case "c": {
			new Tela_Carro_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		case "g": {
			new Tela_Garagem_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		case "h": {
			new Tela_Horario_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		case "u": {
			new Tela_Usuario_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		default:
			throw new IllegalArgumentException("Unexpected value: " + redirecionar);
		}

	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Tela_Mensagem_Confirmacao.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Tela_Mensagem_Confirmacao.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Tela_Mensagem_Confirmacao.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Tela_Mensagem_Confirmacao.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Tela_Mensagem_Confirmacao().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JButton jButtonNao;
	private javax.swing.JButton jButtonSim;
	private javax.swing.JLabel jLabelMensagem;
	// End of variables declaration
}
