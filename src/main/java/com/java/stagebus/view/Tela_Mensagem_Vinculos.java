/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.java.stagebus.view;

import com.java.stagebus.controller.CarroController;
import com.java.stagebus.controller.FuncionarioController;
import com.java.stagebus.controller.GaragemController;
import com.java.stagebus.controller.HorarioController;
import com.java.stagebus.controller.LinhaController;
import com.java.stagebus.controller.TipoCarroController;
import com.java.stagebus.enums.CarroEnum;
import com.java.stagebus.enums.HorarioEnum;
import com.java.stagebus.model.UsuarioModel;

/**
 *
 * @author User
 */
public class Tela_Mensagem_Vinculos extends javax.swing.JFrame {
	private static String redirecionar;
	private static int amount;
	private String[] options;
	private UsuarioModel userModel;
	private static int objectID;
	private int type;
	private GaragemController garageController = new GaragemController();
	private CarroController carController = new CarroController();
	private HorarioController scheduleController = new HorarioController();
	private FuncionarioController employeeController = new FuncionarioController();
	private LinhaController lineController = new LinhaController();
	private TipoCarroController car_typeController = new TipoCarroController();

	public static void setAmount(int i) {

		amount = i;
	}

	public static void setRedirecionar(String s) {

		redirecionar = s;
	}

	/**
	 * Creates new form Tela_Mensagem
	 */
	public Tela_Mensagem_Vinculos() {
		userModel = Tela_1.getDataUser();
		initComponents();
		getContentPane().setBackground(java.awt.Color.WHITE);

		setExtendedState(MAXIMIZED_BOTH);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jButtonRemanejar = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextAreaMensagem = new javax.swing.JTextArea();
		jComboBoxOpcao = new javax.swing.JComboBox<>();
		jButtonDepois = new javax.swing.JButton();

		adapteView();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jButtonRemanejar.setBackground(new java.awt.Color(68, 114, 196));
		jButtonRemanejar.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
		jButtonRemanejar.setForeground(new java.awt.Color(255, 255, 255));
		jButtonRemanejar.setText("Remanejar");
		jButtonRemanejar.setBorder(null);
		jButtonRemanejar.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jButtonRemanejarMouseClicked(evt);
			}
		});

		jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
		jScrollPane1.setBorder(null);

		jTextAreaMensagem.setEditable(false);
		jTextAreaMensagem.setBackground(new java.awt.Color(255, 255, 255));
		jTextAreaMensagem.setColumns(20);
		jTextAreaMensagem.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
		jTextAreaMensagem.setForeground(new java.awt.Color(68, 114, 196));
		jTextAreaMensagem.setLineWrap(true);
		jTextAreaMensagem.setRows(5);
		jTextAreaMensagem.setWrapStyleWord(true);
		jTextAreaMensagem.setBorder(null);
		jScrollPane1.setViewportView(jTextAreaMensagem);

		jComboBoxOpcao.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
		jComboBoxOpcao.setModel(new javax.swing.DefaultComboBoxModel<>(options));
		jComboBoxOpcao.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jComboBoxOpcaoMouseClicked(evt);
			}
		});

		jButtonDepois.setBackground(new java.awt.Color(68, 114, 196));
		jButtonDepois.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
		jButtonDepois.setForeground(new java.awt.Color(255, 255, 255));
		jButtonDepois.setText("Farei isso depois");
		jButtonDepois.setBorder(null);
		jButtonDepois.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jButtonDepoisMouseClicked(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap(50, Short.MAX_VALUE)
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 902,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(50, Short.MAX_VALUE))
				.addGroup(layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
								.addComponent(jComboBoxOpcao, javax.swing.GroupLayout.Alignment.LEADING, 0,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(javax.swing.GroupLayout.Alignment.LEADING,
										layout.createSequentialGroup()
												.addComponent(jButtonDepois, javax.swing.GroupLayout.PREFERRED_SIZE,
														250, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(30, 30, 30).addComponent(jButtonRemanejar,
														javax.swing.GroupLayout.PREFERRED_SIZE, 250,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addContainerGap(82, Short.MAX_VALUE)
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18)
						.addComponent(jComboBoxOpcao, javax.swing.GroupLayout.PREFERRED_SIZE, 46,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jButtonRemanejar, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButtonDepois, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(83, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>

	private void adapteView() {
		switch (redirecionar) {
		case "f": {
			type = Tela_Funcionario_Geral.getEmployee().getIdTipo();
			objectID = Tela_Funcionario_Geral.getEmployee().getId();
			jTextAreaMensagem.setText("O funcionário possui " + amount
					+ " vínculos de horários, antes de excluí-lo será necessário remanejar esses vínculos para outro objeto ou excluir o funcionário dos horários cadastrados.");
			String[] aux;
			if (type == 1)
				aux = scheduleController.generateObjectList(scheduleController.listOfDriver());
			else
				aux = scheduleController.generateObjectList(scheduleController.listOfConductor());
			options = new String[aux.length];

			int j = 0;
			options[0] = "Excluir funcioário dos horários ativos.";
			for (int i = 1; i < options.length; j++) {
				int int_aux = Integer.parseInt(aux[j].substring(0, (aux[j].indexOf("-") - 1)));

				if (int_aux != objectID) {
					options[i] = aux[j];
					i++;
				}
			}
			break;
		}
		case "l": {
			objectID = Tela_Linha_Geral.getLine().getId();
			jTextAreaMensagem.setText("A linha possui " + amount
					+ " vínculos de horários, antes de excluí-la será necessário remanejar esses vínculos para outro objeto ou excluir os horários cadastrados.");
			String[] aux = scheduleController.generateObjectList(scheduleController.listOfLine());
			options = new String[aux.length];

			int j = 0;
			options[0] = "Excluir horários em que a linha está vinculada.";
			for (int i = 1; i < options.length; j++) {
				int int_aux = Integer.parseInt(aux[j].substring(0, (aux[j].indexOf("-") - 1)));

				if (int_aux != objectID) {
					options[i] = aux[j];
					i++;
				}
			}
			setVisible(false);
			break;
		}

		case "t": {
			objectID = Tela_TipoCarro_Geral.getCarType().getId();
			jTextAreaMensagem.setText("O tipo de carro está vinculado a " + amount
					+ " carros, antes de excluí-lo será necessário remanejar esses vínculos para outro objeto.");
			String[] aux = carController.generateObjectList(carController.listOfType());
			options = new String[aux.length - 1];

			int j = 0;
			
			for (int i = 0; i < options.length; j++) {
				int int_aux = Integer.parseInt(aux[j].substring(0, (aux[j].indexOf("-") - 1)));

				if (int_aux != objectID) {
					options[i] = aux[j];
					i++;
				}
			}
			setVisible(false);
			break;
		}

		case "c": {
			objectID = Tela_Carro_Geral.getCar().getNumero();
			jTextAreaMensagem.setText("O carro possui " + amount
					+ " vínculos de horários, antes de excluí-lo será necessário remanejar esses vínculos para outro objeto ou excluir os horários cadastrados.");
			String[] aux = carController.generateObjectList(carController.listOfCar());
			options = new String[aux.length];

			int j = 0;
			options[0] = "Excluir horários em que o carro está vinculado.";
			for (int i = 1; i < options.length; j++) {
				int int_aux = Integer.parseInt(aux[j].substring(0, (aux[j].indexOf("-") - 1)));

				if (int_aux != objectID) {
					options[i] = aux[j];
					i++;
				}
			}
			break;
		}

		case "g": {
			objectID = Tela_Garagem_Geral.getGarage().getId();
			jTextAreaMensagem.setText("A garagem possui " + amount
					+ " vínculos com outros registros, antes de excluí-lo será necessário remanejar esses vínculos para outro objeto.");
			String[] aux = carController.generateObjectList(carController.listOfGarage());
			options = new String[aux.length - 1];

			int j = 0;
			for (int i = 0; i < options.length; j++) {
				int int_aux = Integer.parseInt(aux[j].substring(0, (aux[j].indexOf("-") - 1)));

				if (int_aux != objectID) {
					options[i] = aux[j];
					i++;
				}
			}

			break;
		}

		case "h": {
			new Tela_Horario_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		case "u": {
			new Tela_Usuario_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		default:
			throw new IllegalArgumentException("Unexpected value: " + redirecionar);
		}
	}

	private void jButtonRemanejarMouseClicked(java.awt.event.MouseEvent evt) {
		switch (redirecionar) {
		case "f": {

			if (jComboBoxOpcao.getSelectedIndex() != 0) {
				String id_new = jComboBoxOpcao.getSelectedItem().toString();
				id_new = id_new.substring(0, (id_new.indexOf("-") - 1));
				if (type == 1)
					scheduleController.update(HorarioEnum.MOTORISTA.getNome(), objectID, id_new, 3);
				else
					scheduleController.update(HorarioEnum.COBRADOR.getNome(), objectID, id_new, 3);
			} else {
				if (type == 1)
					scheduleController.update(HorarioEnum.MOTORISTA.getNome(), objectID, null, 3);
				else
					scheduleController.update(HorarioEnum.COBRADOR.getNome(), objectID, null, 3);
			}
			employeeController.delete(userModel.getId(), objectID);
			Tela_Mensagem_Redirecionar.setRedirecionar("fd");
			new Tela_Mensagem_Redirecionar().setVisible(true);
			setVisible(false);
			break;
		}
		case "l": {
			
			if (jComboBoxOpcao.getSelectedIndex() != 0) {
				String id_new = jComboBoxOpcao.getSelectedItem().toString();
				id_new = id_new.substring(0, (id_new.indexOf("-") - 1));
				scheduleController.update(HorarioEnum.LINHA.getNome(), objectID, id_new, 3);
			} else {
			scheduleController.deleteByIdObject(HorarioEnum.LINHA.getNome(), objectID);
			}
			lineController.delete(userModel.getId(), objectID);
			Tela_Mensagem_Redirecionar.setRedirecionar("ld");
			new Tela_Mensagem_Redirecionar().setVisible(true);
			setVisible(false);
			break;
		}

		case "t": {

			String id_new = jComboBoxOpcao.getSelectedItem().toString();
			id_new = id_new.substring(0, (id_new.indexOf("-") - 1));
			carController.update(CarroEnum.TIPO.getNome(), objectID, id_new, 3);
			car_typeController.delete(userModel.getId(), objectID);
			Tela_Mensagem_Redirecionar.setRedirecionar("td");
			new Tela_Mensagem_Redirecionar().setVisible(true);
			setVisible(false);
			break;
		}

		case "c": {
			if (jComboBoxOpcao.getSelectedIndex() != 0) {
				String id_new = jComboBoxOpcao.getSelectedItem().toString();
				id_new = id_new.substring(0, (id_new.indexOf("-") - 1));
				scheduleController.update(HorarioEnum.CARRO.getNome(), objectID, id_new, 3);
			} else
				scheduleController.deleteByIdObject(HorarioEnum.CARRO.getNome(), objectID);
			carController.delete(userModel.getId(), objectID);
			Tela_Mensagem_Redirecionar.setRedirecionar("cd");
			new Tela_Mensagem_Redirecionar().setVisible(true);
			setVisible(false);

			break;
		}

		case "g": {

			String id_new = jComboBoxOpcao.getSelectedItem().toString();
			id_new = id_new.substring(0, (id_new.indexOf("-") - 1));
			carController.update(CarroEnum.GARAGEM.getNome(), objectID, id_new, 3);
			scheduleController.update(HorarioEnum.GARAGEM.getNome(), objectID, id_new, 3);
			garageController.delete(userModel.getId(), objectID);
			Tela_Mensagem_Redirecionar.setRedirecionar("gd");
			new Tela_Mensagem_Redirecionar().setVisible(true);
			setVisible(false);
			break;
		}

		case "h": {
			new Tela_Horario_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		case "u": {
			new Tela_Usuario_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		default:
			throw new IllegalArgumentException("Unexpected value: " + redirecionar);
		}
	}

	private void jComboBoxOpcaoMouseClicked(java.awt.event.MouseEvent evt) {
		// TODO add your handling code here:
	}

	private void jButtonDepoisMouseClicked(java.awt.event.MouseEvent evt) {
		switch (redirecionar) {
		case "f": {
			new Tela_Funcionario_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}
		case "l": {
			new Tela_Linha_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		case "t": {
			new Tela_TipoCarro_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		case "c": {
			new Tela_Carro_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		case "g": {
			new Tela_Garagem_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		case "h": {
			new Tela_Horario_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		case "u": {
			new Tela_Usuario_Detalhes().setVisible(true);
			setVisible(false);
			break;
		}

		default:
			throw new IllegalArgumentException("Unexpected value: " + redirecionar);
		}

	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Tela_Mensagem_Vinculos.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Tela_Mensagem_Vinculos.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Tela_Mensagem_Vinculos.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Tela_Mensagem_Vinculos.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Tela_Mensagem_Vinculos().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JButton jButtonDepois;
	private javax.swing.JButton jButtonRemanejar;
	private javax.swing.JComboBox<String> jComboBoxOpcao;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextArea jTextAreaMensagem;
	// End of variables declaration
}
